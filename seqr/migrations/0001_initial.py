# Generated by Django 2.2.5 on 2020-02-26 21:08

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('family_id', models.CharField(db_index=True, max_length=100)),
                ('display_name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pedigree_image', models.ImageField(blank=True, null=True, upload_to='pedigree_images')),
                ('success_story_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('N', 'Novel Discovery'), ('A', 'Altered Clinical Outcome'), ('C', 'Collaboration'), ('T', 'Technical Win'), ('D', 'Data Sharing'), ('O', 'Other')], max_length=1, null=True), default=[], size=None)),
                ('success_story', models.TextField(blank=True, null=True)),
                ('mme_notes', models.TextField(blank=True, null=True)),
                ('analysis_notes', models.TextField(blank=True, null=True)),
                ('analysis_summary', models.TextField(blank=True, null=True)),
                ('coded_phenotype', models.TextField(blank=True, null=True)),
                ('post_discovery_omim_number', models.TextField(blank=True, null=True)),
                ('pubmed_ids', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=[], size=None)),
                ('analysis_status', models.CharField(choices=[('S', 'S'), ('S_kgfp', 'S'), ('S_kgdp', 'S'), ('S_ng', 'S'), ('Sc_kgfp', 'S'), ('Sc_kgdp', 'S'), ('Sc_ng', 'S'), ('Rcpc', 'R'), ('Rncc', 'R'), ('C', 'C'), ('I', 'A'), ('Q', 'W')], default='Q', max_length=10)),
                ('internal_analysis_status', models.CharField(blank=True, choices=[('S', 'S'), ('S_kgfp', 'S'), ('S_kgdp', 'S'), ('S_ng', 'S'), ('Sc_kgfp', 'S'), ('Sc_kgdp', 'S'), ('Sc_ng', 'S'), ('Rcpc', 'R'), ('Rncc', 'R'), ('C', 'C'), ('I', 'A'), ('Q', 'W')], max_length=10, null=True)),
                ('internal_case_review_notes', models.TextField(blank=True, null=True)),
                ('internal_case_review_summary', models.TextField(blank=True, null=True)),
                ('assigned_analyst', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_families', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('individual_id', models.TextField(db_index=True)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unknown')], default='U', max_length=1)),
                ('affected', models.CharField(choices=[('A', 'Affected'), ('N', 'Unaffected'), ('U', 'Unknown')], default='U', max_length=1)),
                ('display_name', models.TextField(blank=True, default='')),
                ('notes', models.TextField(blank=True, null=True)),
                ('case_review_status', models.CharField(choices=[('I', 'In Review'), ('U', 'Uncertain'), ('A', 'Accepted'), ('R', 'Not Accepted'), ('Q', 'More Info Needed'), ('P', 'Pending Results and Records'), ('N', 'NMI Review'), ('W', 'Waitlist')], default='I', max_length=2)),
                ('case_review_status_last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('case_review_discussion', models.TextField(blank=True, null=True)),
                ('phenotips_patient_id', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('phenotips_eid', models.CharField(blank=True, max_length=165, null=True)),
                ('phenotips_data', models.TextField(blank=True, null=True)),
                ('filter_flags', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('pop_platform_filters', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('population', models.CharField(max_length=5, null=True)),
                ('case_review_status_last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seqr.Family')),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paternal_children', to='seqr.Individual')),
                ('mother', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maternal_children', to='seqr.Individual')),
            ],
            options={
                'unique_together': {('family', 'individual_id')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('genome_version', models.CharField(choices=[('37', 'GRCh37'), ('38', 'GRCh38')], default='37', max_length=5)),
                ('phenotips_user_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('is_mme_enabled', models.BooleanField(default=True)),
                ('mme_primary_data_owner', models.TextField(blank=True, default='Kristi Murphy', null=True)),
                ('mme_contact_url', models.TextField(blank=True, default='mailto:research.computing@childrens.harvard.edu', null=True)),
                ('mme_contact_institution', models.TextField(blank=True, default="Research Computing - Boston Children's Hospital", null=True)),
                ('disable_staff_access', models.BooleanField(default=False)),
                ('last_accessed_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('can_edit_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('can_view_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owners_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
            ],
            options={
                'permissions': (('can_view', 'can_view'), ('can_edit', 'can_edit'), ('is_owner', 'is_owner')),
            },
        ),
        migrations.CreateModel(
            name='SavedVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('xpos_start', models.BigIntegerField()),
                ('xpos_end', models.BigIntegerField(null=True)),
                ('ref', models.TextField()),
                ('alt', models.TextField()),
                ('selected_main_transcript_id', models.CharField(max_length=20, null=True)),
                ('saved_variant_json', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Family')),
            ],
            options={
                'unique_together': {('xpos_start', 'xpos_end', 'ref', 'alt', 'family')},
            },
        ),
        migrations.CreateModel(
            name='VariantSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('search', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('created_by', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VariantTagType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('category', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#1f78b4', max_length=20)),
                ('order', models.FloatField(null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seqr.Project')),
            ],
            options={
                'unique_together': {('project', 'name', 'color')},
            },
        ),
        migrations.CreateModel(
            name='VariantTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('search_hash', models.CharField(max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('saved_variants', models.ManyToManyField(to='seqr.SavedVariant')),
                ('variant_tag_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.VariantTagType')),
            ],
        ),
        migrations.CreateModel(
            name='VariantSearchResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('search_hash', models.CharField(db_index=True, max_length=50, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('families', models.ManyToManyField(to='seqr.Family')),
                ('variant_search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.VariantSearch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VariantNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('note', models.TextField()),
                ('submit_to_clinvar', models.BooleanField(default=False)),
                ('search_hash', models.CharField(max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('saved_variants', models.ManyToManyField(to='seqr.SavedVariant')),
            ],
        ),
        migrations.CreateModel(
            name='VariantFunctionalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('functional_data_tag', models.TextField(choices=[('Functional Data', (('Biochemical Function', '{"description": "Gene product performs a biochemical function shared with other known genes in the disease of interest, or consistent with the phenotype.", "color": "#311B92"}'), ('Protein Interaction', '{"description": "Gene product interacts with proteins previously implicated (genetically or biochemically) in the disease of interest.", "color": "#4A148C"}'), ('Expression', '{"description": "Gene is expressed in tissues relevant to the disease of interest and/or is altered in expression in patients who have the disease.", "color": "#7C4DFF"}'), ('Patient Cells', '{"description": "Gene and/or gene product function is demonstrably altered in patients carrying candidate mutations.", "color": "#B388FF"}'), ('Non-patient cells', '{"description": "Gene and/or gene product function is demonstrably altered in human cell culture models carrying candidate mutations.", "color": "#9575CD"}'), ('Animal Model', '{"description": "Non-human animal models with a similarly disrupted copy of the affected gene show a phenotype consistent with human disease state.", "color": "#AA00FF"}'), ('Non-human cell culture model', '{"description": "Non-human cell-culture models with a similarly disrupted copy of the affected gene show a phenotype consistent with human disease state.", "color": "#BA68C8"}'), ('Rescue', '{"description": "The cellular phenotype in patient-derived cells or engineered equivalents can be rescued by addition of the wild-type gene product.", "color": "#663399"}'))), ('Functional Scores', (('Genome-wide Linkage', '{"metadata_title": "LOD Score", "description": "Max LOD score used in analysis to restrict where you looked for causal variants; provide best score available, whether it be a cumulative LOD score across multiple families or just the best family\'s LOD score.", "color": "#880E4F"}'), ('Bonferroni corrected p-value', '{"metadata_title": "P-value", "description": "Bonferroni-corrected p-value for gene if association testing/burden testing/etc was used to identify the gene.", "color": "#E91E63"}'), ('Kindreds w/ Overlapping SV & Similar Phenotype', '{"metadata_title": "#", "description": "Number of kindreds (1+) previously reported/in databases as having structural variant overlapping the gene and a similar phenotype.", "color": "#FF5252"}'))), ('Additional Kindreds (Literature, MME)', (('Additional Unrelated Kindreds w/ Causal Variants in Gene', '{"metadata_title": "# additional families", "description": "Number of additional kindreds with causal variants in this gene (Any other kindreds from collaborators, MME, literature etc). Do not count your family in this total.", "color": "#D84315"}'),))])),
                ('metadata', models.TextField(null=True)),
                ('search_hash', models.CharField(max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('saved_variants', models.ManyToManyField(to='seqr.SavedVariant')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('sample_type', models.CharField(blank=True, choices=[('WES', 'Exome'), ('WGS', 'Whole Genome'), ('RNA', 'RNA'), ('ARRAY', 'ARRAY')], max_length=20, null=True)),
                ('dataset_type', models.CharField(blank=True, choices=[('ALIGN', 'Alignment'), ('VARIANTS', 'Variant Calls'), ('SV', 'SV Calls'), ('BREAK', 'Breakpoints'), ('SPLICE', 'Splice Junction Calls'), ('ASE', 'Allele Specific Expression')], max_length=20, null=True)),
                ('sample_id', models.TextField(db_index=True)),
                ('elasticsearch_index', models.TextField(blank=True, db_index=True, null=True)),
                ('dataset_file_path', models.TextField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('loaded_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('individual', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='seqr.Individual')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(db_index=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(to='seqr.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocusList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField(db_index=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(to='seqr.Project')),
            ],
            options={
                'permissions': (('can_view', 'can_view'), ('can_edit', 'can_edit'), ('is_owner', 'is_owner')),
                'unique_together': {('name', 'description', 'is_public', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='GeneNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('note', models.TextField(blank=True, default='')),
                ('gene_id', models.CharField(max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FamilyAnalysedBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Family')),
            ],
        ),
        migrations.AddField(
            model_name='family',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seqr.Project'),
        ),
        migrations.CreateModel(
            name='LocusListInterval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('genome_version', models.CharField(choices=[('37', 'GRCh37'), ('38', 'GRCh38')], default='37', max_length=5)),
                ('chrom', models.CharField(max_length=2)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('locus_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.LocusList')),
            ],
            options={
                'unique_together': {('locus_list', 'genome_version', 'chrom', 'start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='LocusListGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('gene_id', models.TextField(db_index=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('locus_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.LocusList')),
            ],
            options={
                'unique_together': {('locus_list', 'gene_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='family',
            unique_together={('project', 'family_id')},
        ),
        migrations.CreateModel(
            name='AnalysisGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('families', models.ManyToManyField(to='seqr.Family')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seqr.Project')),
            ],
            options={
                'unique_together': {('project', 'name')},
            },
        ),
    ]
